/**
 * Created by plter on 14-1-25.
 * @blog http://plter.com
 * @github http://github.com/plter/hotnode
 */

var fs = require('fs');
global.plter = global.plter||{};
global.plter.hotnode = global.plter.hotnode||{};
global.plter.hotnode.cached_file_map = global.plter.hotnode.cached_file_map||{};

/**
 *
 * @param {String} fileName
 * @param {Function} handler
 * @return {Object} The script result
 */
exports.loadScript = function(fileName){

    var cachedFile = plter.hotnode.cached_file_map[fileName];
    var cachedObject=null;

    if(fs.existsSync(fileName)){
        var stat = fs.statSync(fileName);
        var mtime = stat.mtime.getTime();
        var size = stat.size;

        if(cachedFile && cachedFile.mtime ==mtime&&cachedFile.size == size){
            cachedObject = cachedFile.object;
        }else{
            cachedObject = eval(""+fs.readFileSync(fileName));

            plter.hotnode.cached_file_map[fileName]={size:size,mtime:mtime,object:cachedObject};
        }
    }else if(cachedFile){
        cachedObject = cachedFile.object;
    }

    return cachedObject;
}

plter.hotnode.loadScript = exports.loadScript;
global.loadScript = exports.loadScript;
plter.hotnode.require = require;
global.require = require;